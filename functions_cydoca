import random

class class1(object):
    def __init__(self):
        self.table = [[((i*3 + i//3 + j) % (3*3) + 1) for j in range(3*3)] for i in range(3*3)]

    def print(self):
        print (self.table)

    def draw_table(self):
        for j in range (9):
            print ("-------------------------------------")
            string=""
            for i in range (37):
                if (i%4==0):
                    string=string+ ("|")
                    continue
                if (i%2==1):
                    string=string+ (" ")
                    continue
                if (i%4==2):
                    string=string+str(self.table[j][i//4])
            print (string)
        print ("-------------------------------------")
        print ("\n\n\n")
    def perevernut(self):
        for i in range (9):
            for j in range (i,9):
                self.table[i][j],self.table[j][i]=self.table[j][i],self.table[i][j]
        return self.table

    def check_table(self):
        for i in range (9):
            for j in range (9):
                if self.table[i][j]==0:
                    return 1
        for i in range (9):
            for j in range (9):
                if (self.table[i].count(self.table[i][j])>1):
                    return 0
        self.table = self.perevernut()
        self.draw_table()
        for i in range (9):
            for j in range (9):
                if (self.table[i].count(self.table[i][j])>1):
                    return 0
        self.table = self.perevernut()
        return 2
        for i in c:
            for j in v:
                w =[]
                for x in range (3):
                    for z in range (3):
                        w.append(self.table[x+i][z+j])
                for a in w:
                    print(w)
                    if(w.count(a)>1):
                            print(1)

    def stroca(self,a,b):
        self.table[a],self.table[b]=self.table[b],self.table[a]
        return self.table

    def stolbic(self,a,b):
        self.table = self.perevernut()
        self.table = self.stroca(a,b)
        self.table = self.perevernut()
        return self.table

    def random1(self):
        for i in range (10):
            n =random.randint(1,3)
            if (n ==1):
                self.perevernut()
            if (n ==2):
                a =random.randint(0,8)
                b =random.randint(0,8)
                self.table = self.stolbic(a,b)
            if (n ==3):
                a =random.randint(0,8)
                b =random.randint(0,8)
                self.table = self.stroca(a,b)
        while (self.check_table()!=2):
            a =random.randint(0,8)
            b =random.randint(0,8)
            self.table = self.stolbic(a,b)
            self.table = self.stroca(a,b)
        return self.table

    c =[0,3,6]
    v =[0,3,6]

    def sborca_stroca(self):
        w =[]
        for z in range (9):
            w.append(self.table[0][z])
        for a in w:
            if(w.count(a)>1):
                print(1)

    def sborca_stolbic(self):
        w =[]
        for x in range (9):
            w.append(self.table[x][0])
        for a in w:
            if(w.count(a)>1):
                print(1)

    def zamenit1(self,a):
        self.table[a][0]=0
        self.draw_table()
        w =[]
        for z in range (9):
                w.append(self.table[z][0])
        temp =0
        for i in range(1,10):
                if(w.count(i)<1):
                    temp =i
        print(temp)
        for b in range (len(self.table[0])):
            if self.table[b][0]==0:
                self.table[b][0]=temp

    def zamenit2(self,a):
        self.table[a][0]=0
        self.draw_table()
        w =[]
        for z in range (9):
            w.append(self.table[z][0])
        temp =0
        for i in range(1,10):
            if(w.count(i)<1):
                temp =i
        print(temp)
        for b in range (len(self.table[0])):
            if self.table[b][0]==0:
                self.table[b][0]=temp

    def zamenit_na0(self):
        a =random.randint(0,8)
        b =random.randint(0,8)
        self.table[a][b]=0

    def zamenit_table(self):
        for m in range(0,9):
            for a in range (9):
                self.table[a][m]=0
                w =[]
                for z in range (9):
                        w.append(self.table[z][m])
                temp =0
                for i in range(1,10):
                        if(w.count(i)<1):
                            temp =i
                for b in range (len(self.table[m])):
                    if self.table[b][m]==0:
                        self.table[b][m]=temp
